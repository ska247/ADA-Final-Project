---
title: "Homework 7"
author: "Stephanie Kern-Allely"
output:
  html_document:
    df_print: paged
---

Run the below code to create RR function for generating IRRs and 95% CIs for
Poisson models only, import GSS data, and load libaries (You may have to install associated packages).


```{r}
#load in necessary libraries
#to import files
library(foreign) 
# Load MASS for negative bin
library(MASS)
# Load ggplot for graphing
library(ggplot2)
# Load lmtest library for coeftest
library(lmtest)
# Load sandwich library for robust estimator
library(sandwich)
#load stargazer library to view a comparison of standard errors
library(stargazer)


#create incidence rate ratio function
glm.RR <- function(GLM.RESULT, digits = 2) {
  if (GLM.RESULT$family$family == "binomial") {
    LABEL <- "OR"
  } else if (GLM.RESULT$family$family == "poisson") {
    LABEL <- "RR"
  } else {
    stop("Not logistic or Poisson model")
  }
  COEF <- stats::coef(GLM.RESULT)
  CONFINT <- stats::confint(GLM.RESULT)
  TABLE <- cbind(coef=COEF, CONFINT)
  TABLE.EXP <- round(exp(TABLE), digits)
  colnames(TABLE.EXP)[1] <- LABEL
  TABLE.EXP
}

#create funtion to read in dct
read.dct <- function(dct, labels.included = "yes") {
  temp <- readLines(dct)
  temp <- temp[grepl("_column", temp)]
  switch(labels.included,
         yes = {
           pattern <- "_column\\(([0-9]+)\\)\\s+([a-z0-9]+)\\s+(.*)\\s+%([0-9]+)[a-z]\\s+(.*)"
           classes <- c("numeric", "character", "character", "numeric", "character")
           N <- 5
           NAMES <- c("StartPos", "Str", "ColName", "ColWidth", "ColLabel")
           1
         },
         no = {
           pattern <- "_column\\(([0-9]+)\\)\\s+([a-z0-9]+)\\s+(.*)\\s+%([0-9]+).*"
           classes <- c("numeric", "character", "character", "numeric")
           N <- 4
           NAMES <- c("StartPos", "Str", "ColName", "ColWidth")
         })
  temp_metadata <- setNames(lapply(1:N, function(x) {
    out <- gsub(pattern, paste("\\", x, sep = ""), temp)
    out <- gsub("^\\s+|\\s+$", "", out)
    out <- gsub('\"', "", out, fixed = TRUE)
    class(out) <- classes[x] ; out }), NAMES)
  temp_metadata[["ColName"]] <- make.names(gsub("\\s", "", temp_metadata[["ColName"]]))
  temp_metadata
}

#read in data
read.dat <- function(dat, metadata_var, labels.included = "yes") {
  read.fwf(dat, widths = metadata_var[["ColWidth"]], col.names = metadata_var[["ColName"]])
}

GSS_metadata <- read.dct(
  "https://raw.githubusercontent.com/kijohnson/ADA_Spring_2019/master/Class%206/Class_6_data/GSS.dct")

GSS_ascii <- read.dat(
  "https://raw.githubusercontent.com/kijohnson/ADA_Spring_2019/master/Class%206/Class_6_data/GSS.dat",
  GSS_metadata)

attr(GSS_ascii, "col.label") <- GSS_metadata[["ColLabel"]]

GSS <- GSS_ascii

#recode sex as 1 for male and 0 for female
GSS$SEX[GSS$SEX==1]<-1
GSS$SEX[GSS$SEX==2]<-0
GSS$SEX<-factor(GSS$SEX, levels=c(0,1), labels=c("Female", "Male"))

```
<h4> 1. First look at the distribution of reported number of children in the dataset
using a histogram to see if it roughly follows a Poisson distribution.</h4>

```{r}
#attach GSS dataset
attach(GSS)

#make hisotgram of reported number of children in the dataset
hist(CHILDS)

#create sample Poission distribution 
y = rpois(10^6, 2);  up=max(y)

#make histogram overlaid with sample Poission distrbution to see if it roughly follows
hist(CHILDS, prob=T, br=(-1:up)+.5, col="skyblue2", xlab="Number of children", 
  main="Distribution of number of children with Poission distribution overlay")
curve(dnorm(x, mean(y), sd(y)), col="red", lwd=2, add=T) 

```

<h4>2. Do males have *fewer* children on average than females? Determine the answer
to this question prior to modeling and write the answer in a full sentence.</h4>

Men have a lower average number of children than women (p=0.005). On average, 
men have 1.77 children while women have 1.95 children.

```{r}

#compare mean children between sexes using two sample t-test
t.test(CHILDS~SEX)

```

<h4>3a. Run two univariate poisson models to determine if the rate of children
varies by SEX and AGE (and use the summary function to see the results),</h4> 

```{r}

#run sex univariate model
SexModel <- glm(CHILDS ~ SEX, family = poisson)
summary(SexModel)

#run age univariate model
AgeModel <- glm(CHILDS ~ AGE, family = poisson)
summary(AgeModel)

```

<h4>3b. Describe how the rate of children varies by SEX and AGE using incidence rate
ratios (hint: you can use the glm.RR function to get IRRs here). </h4>

Men have 9% fewer expected children than women (IRR=0.91).<br>
For every year older a person is, their expected number of children increases by 2% (IRR=1.02).

```{r}

#calculate IRRs for Sex model
glm.RR(SexModel)

#calculate IRRs for Age model
glm.RR(AgeModel)

```

<h4>4. We discussed in class that Poisson models are often inappropriate because the
variance in the sample exceeds the mean in the sample. To check for overdispersion, 
we can run a negative binomial model and then use the LR test to see if
adding an overdispersion paremeter improves the model fit.
* Run two negative binomial models, one for SEX and one for AGE, 
* Check for overdispersion using the lrtest function to compare the Poisson 
and negative binomial models for both SEX and AGE to see which is a better fit. 
Interpret the output.</h4>

Both log likelihood tests comparing the Poisson and negative binomial models for age and sex
showed significantly better fits for the negative binomial models. Thus, overdispersion is 
present and the Poisson models' standard errors are downward biased, leading to inflated
p-values.


```{r}

#run sex negative binomial regression
SexModelNegBin <- glm.nb(CHILDS ~ SEX)
summary(SexModelNegBin)

#run age negative binomial regression
AgeModelNegBin <- glm.nb(CHILDS ~ AGE)
summary(AgeModelNegBin)

#compare the Poisson and negative binomial models to determine overdispersion
lrtest(SexModel,SexModelNegBin)
lrtest(AgeModel,AgeModelNegBin)

```

<h4>5. Use the stargazer function to compare SEs for SEX and AGE from the Poisson
and negative binomial models. Interpret the output (in terms of how the SEs
compare in size between Poisson and negative binomial regression).</h4>

The SEs for the SEX (p<0.01) and AGE (p<0.01) models are always lower in the 
Poisson model compared to the negative binomial model. This comparison indicates
that the standard errors of the Poisson regression are biased and may make 
non-significant independent variables significant.

```{r}

#compare model SEs for sex
stargazer(SexModel, SexModelNegBin, title="Sex Model Comparison",
          type="text",align=TRUE,single.row=TRUE)

#compare model SEs for age
stargazer(AgeModel, AgeModelNegBin, title="Age Model Comparison",
          type="text",align=TRUE,single.row=TRUE)

```

<h4>6. Determine if AGE, an independent predictor of the number of children,
improves the model fit for the negative binomial model estimating the effect of
SEX on the rate of children. HINT: use the LR test to compare the negative
binomial models for SEX with and without AGE included as a covariate. What
conclusion can you make from the LR test results?</h4>

The LR test indicates that the model with both sex and age is a better fit than
the model with only sex. Thus, adding age as an independent predictor of the rate
of children improves the model fit for the negative binomial model.

```{r}

#run negative binomial model with both sex and age
SexAgeModelNegBin <- glm.nb(CHILDS ~ SEX + AGE)
summary(SexAgeModelNegBin)

#compare the negative binomial model with only sex to the combined model
lrtest(SexModelNegBin,SexAgeModelNegBin)

```

<h4>7. We learned in class that it is a good idea to use robust standard errors for
both Poisson and negative binomial regression models. Use robust standard
errors for your negative binomial model from #6 that includes SEX and AGE.
Save the model results as an object called ‘robust’ and look at the results by
printing ‘robust’.</h4>

```{r}

#negative binomial model with SE estimated via robust variance estimator
#from sandwich package
robust <- coeftest(SexAgeModelNegBin, vcov = sandwich)
print(robust)

```

<h4>8. Calculate the IRR for the effect of sex on the rate of children from the negative
binomial model that includes SEX and AGE as covariates. You can modify the
below code to do this. Interpret the IRR for SEX from the model.</h4>

Men had an expected number of children 8.2% lower than women, with age being equal.

```{r}

#Calculate IRRs and 95% CIs using robust standard errors
est <- cbind(IRR = coef(SexAgeModelNegBin), "2.5%"=robust[,1]-1.96*robust[,2],
"97.5%"=robust[,1]+1.96*robust[,2])
exp(est)

```